declare type nodeValueType = 'ObjectExpression' | 'Identifier' | 'CallExpression';
export interface IOptions {
    sourceMap?: boolean;
    extensions?: string[];
    include?: string;
    exclude?: string;
}
export interface IExportedItem {
    local: {
        name: string;
    };
    exported: {
        name: string;
    };
}
export interface IProperties {
    key: {
        name: string;
    };
}
export interface IMembers {
    object: {
        name: string;
    };
    property: {
        name: string;
    };
}
export interface INodeValue {
    type: nodeValueType;
    properties?: IProperties[];
    members?: IMembers[];
}
export interface IAppendList {
    [prop: string]: boolean;
}
export default function namedExport(options?: IOptions): {
    name: string;
    transform(code: string, id: string): {
        code: string;
        map: import("magic-string").SourceMap | null;
    } | null;
};
export {};
