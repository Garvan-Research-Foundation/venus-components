var v=(e=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(e,{get:(t,o)=>(typeof require!="undefined"?require:t)[o]}):e)(function(e){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var i={};import{logger as L}from"@storybook/client-logger";import q from"read-pkg-up";import{detect as G,getNpmVersion as K}from"detect-package-manager";import{loadMainConfig as Q,getStorybookInfo as X,getStorybookConfiguration as Z,getProjectRoot as ee}from"@storybook/core-common";import U from"path";var b=async e=>{let t=Object.keys(e);return Promise.all(t.map(h))},h=async e=>{try{let t=v(U.join(e,"package.json"));return{name:e,version:t.version}}catch{return{name:e,version:null}}};import P from"fs-extra";import w from"path";import{getProjectRoot as H}from"@storybook/core-common";var O={Nx:"nx.json",Turborepo:"turbo.json",Lerna:"lerna.json",Rush:"rush.json",Lage:"lage.config.json"},D=()=>{let e=H();if(!e)return;let o=Object.keys(O).find(s=>{let y=w.join(e,O[s]);return P.existsSync(y)});if(o)return o;if(!P.existsSync(w.join(e,"package.json")))return;if(P.readJsonSync(w.join(e,"package.json"))?.workspaces)return"Workspaces"};import{sep as E}from"path";function T(e){return e.replace(/[-[/{}()*+?.\\^$|]/g,"\\$&")}function j(e,t=E){if(!e)return e;let o=process.cwd().split(t);for(;o.length>1;){let n=o.join(t),s=new RegExp(T(n),"g");e=e.replace(s,"$SNIP");let y=o.join(t+t),c=new RegExp(T(y),"g");e=e.replace(c,"$SNIP"),o.pop()}return e}function f(e,t=E){e=JSON.parse(JSON.stringify(e,Object.getOwnPropertyNames(e)));let o=j(JSON.stringify(e),t);return JSON.parse(o)}var R={next:"Next","react-scripts":"CRA",gatsby:"Gatsby","@nuxtjs/storybook":"nuxt","@nrwl/storybook":"nx","@vue/cli-service":"vue-cli","@sveltejs/kit":"svelte-kit"},te=e=>{let t=["angular","ember","html","preact","react","server","svelte","vue","vue3","webComponents"].map(o=>`${o}Options`);for(let o of t)if(o in e)return e[o]},M=e=>j(e).replace(/\/dist\/.*/,"").replace(/\.[mc]?[tj]?s[x]?$/,"").replace(/\/register$/,"").replace(/\/manager$/,"").replace(/\/preset$/,""),oe=async({packageJson:e,mainConfig:t})=>{let o={generatedAt:new Date().getTime(),builder:{name:"webpack5"},hasCustomBabel:!1,hasCustomWebpack:!1,hasStaticDirs:!1,hasStorybookEslint:!1,refCount:0},n={...e?.dependencies,...e?.devDependencies,...e?.peerDependencies},s=Object.keys(n).find(r=>!!R[r]);if(s){let{version:r}=await h(s);o.metaFramework={name:R[s],packageName:s,version:r}}let y=D();y&&(o.monorepo=y);try{let r=await G({cwd:ee()}),a=await K(r);o.packageManager={type:r,version:a}}catch{}if(o.hasCustomBabel=!!t.babel,o.hasCustomWebpack=!!t.webpackFinal,o.hasStaticDirs=!!t.staticDirs,t.typescript&&(o.typescriptOptions=t.typescript),t.core?.builder){let{builder:r}=t.core;o.builder={name:typeof r=="string"?r:r.name,options:typeof r=="string"?void 0:r?.options??void 0}}t.refs&&(o.refCount=Object.keys(t.refs).length),t.features&&(o.features=t.features);let c={};t.addons&&t.addons.forEach(r=>{let a,S;typeof r=="string"?a=M(r):(S=r.options,a=M(r.name)),c[a]={options:S,version:void 0}}),(await b(c)).forEach(({name:r,version:a})=>{c[r].version=a});let m=Object.keys(c),p=Object.keys(n).filter(r=>r.includes("storybook")&&!m.includes(r)).reduce((r,a)=>({...r,[a]:{version:void 0}}),{});(await b(p)).forEach(({name:r,version:a})=>{p[r].version=a});let W=n.typescript?"typescript":"javascript",Y=!!n["eslint-plugin-storybook"],k=X(e),_=p[k.frameworkPackage]?.version||k.version;return{...o,storybookVersion:_,language:W,storybookPackages:p,framework:{name:k.framework,options:te(t)},addons:c,hasStorybookEslint:Y}},d,N=async e=>{if(d)return d;let{packageJson:t={}}=q.sync({cwd:process.cwd(),normalize:!1})||{},o=(e||Z(t?.scripts?.storybook||"","-c","--config-dir"))??".storybook",n=Q({configDir:o});return d=await oe({mainConfig:n,packageJson:t}),d};import ie from"isomorphic-unfetch";import ce from"fetch-retry";import{nanoid as J}from"nanoid";import ne from"path";import{execSync as se}from"child_process";import{getProjectRoot as ae}from"@storybook/core-common";import{createHash as re}from"crypto";var I=e=>{let t=re("sha256");return t.update("storybook-telemetry-salt"),t.update(e),t.digest("hex")};var g,A=()=>{if(g)return g;let e;try{let t=ae(),o=ne.relative(t,process.cwd()),n=se("git config --local --get remote.origin.url",{timeout:1e3,stdio:"pipe"});e=`${String(n).trim()}${o}`,g=I(e)}catch{}return g};var pe="https://storybook.js.org/event-log",ye=ce(ie),u=[],me=J();async function $(e,t={retryDelay:1e3,immediate:!1}){let{payload:o,metadata:n,...s}=e,y=t.stripMetadata?{}:{anonymousId:A(),inCI:Boolean(i.CI)},c=J(),x={...s,eventId:c,sessionId:me,metadata:n,payload:o,context:y},m;try{m=ye(pe,{method:"POST",body:JSON.stringify(x),headers:{"Content-Type":"application/json"},retries:3,retryOn:[503,504],retryDelay:p=>2**p*(typeof t?.retryDelay=="number"&&!Number.isNaN(t?.retryDelay)?t.retryDelay:1e3)}),u.push(m),t.immediate?await Promise.all(u):await m}catch{}finally{u=u.filter(p=>p!==m)}}import V from"chalk";import{cache as B}from"@storybook/core-common";var C="telemetry-notification-date",l=console,F=async()=>{await B.get(C,null)||(B.set(C,Date.now()),l.log(),l.log(`${V.magenta.bold("attention")} => Storybook now collects completely anonymous telemetry regarding usage.`),l.log("This information is used to shape Storybook's roadmap and prioritize features."),l.log("You can learn more, including how to opt-out if you'd not like to participate in this anonymous program, by visiting the following URL:"),l.log(V.cyan("https://storybook.js.org/telemetry")),l.log())};var Ke=async(e,t={},o={})=>{e!=="boot"&&await F();let n={eventType:e,payload:t};try{o?.stripMetadata||(n.metadata=await N(o?.configDir))}catch(s){n.payload.metadataErrorMessage=f(s).message,o?.enableCrashReports&&(n.payload.metadataError=f(s))}finally{let{error:s}=n.payload;s&&(n.payload.error=f(s)),(!n.payload.error||o?.enableCrashReports)&&(i?.STORYBOOK_TELEMETRY_DEBUG&&(L.info(`
[telemetry]`),L.info(JSON.stringify(n,null,2))),await $(n,o))}};export{oe as computeStorybookMetadata,N as getStorybookMetadata,R as metaFrameworks,M as sanitizeAddonName,Ke as telemetry};
